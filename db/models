from sqlalchemy import Boolean, Column, ForeignKey, Integer, String
from sqlalchemy.orm import relationship

from .database import Base

class Book(Base):
    __tablename__="books"

    # Class attributes
    id = Column(Integer, primary_key=True)
    author = Column(String, nullable = False)
    title=Column(String, nullable = False)
    year = Column(Integer, nullable = False)
    description = Column(String, nullable = False)
    borrower_id = Column(Integer, ForeignKey("users.id"))
    availability = Column(Boolean, index=False) # 대출 가능 여부

    borrower=relationship("User", back_populates="books") 

class User(Base):
    __tablename__ = "users" 
    '''__tablename__ attribute tells SQLAlchemy the name of the table for 
    each of models'''

    # Class attributes
    id=Column(Integer, primary_key=True)
    name = Column(String)
    email = Column(String, unique=True, index=True)
    hashed_password = Column(String)
    is_active = Column(Boolean, default=True)
    borrow_state = Column(Boolean, default = False)

    books = relationship("Book", back_populates="users")
    '''
    양방향 참조를 위해서 부모/자식 엔티티 각각에서 back_populates를 해줘야 함
    '''
